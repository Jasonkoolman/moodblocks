// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

/// @title Eyes SVG generator
library EyesDetail {
    uint256 public constant COUNT = 8;
    
    struct Eyes {
        string name;
        string selector;
    }

    /// @notice Returns a `Eyes` by ID
    function getEyes(uint8 id) public pure returns (Eyes memory) {
        require(id > 0 && id <= COUNT, "EyesDetail: Invalid ID supplied");
        return getAll()[id - 1];
    }

    /// @notice Returns all eyes
    function getAll() public pure returns (Eyes[COUNT] memory) {
        return [
            Eyes({ name: "Big Round Eyes", selector: "bigRoundEyes" }),
            Eyes({ name: "Small Pupils", selector: "smallPupils" }),
            Eyes({ name: "Low Hanging Glasses", selector: "lowHangingGlasses" }),
            Eyes({ name: "Heart Eyes", selector: "heartEyes" }),
            Eyes({ name: "Bitcoin Eyes", selector: "bitcoinEyes" }),
            Eyes({ name: "Cross Eyes", selector: "crossEyes" }),
            Eyes({ name: "Twinkle Eyes", selector: "twinkleEyes" }),
            Eyes({ name: "Sleepy Eyes", selector: "sleepyEyes" })
        ];
    }

    function baseEyes() private pure returns (string memory) {
        return string(
            abi.encodePacked(
                '<circle cx="155" cy="164" r="42" fill="white"/>',
                '<circle cx="265" cy="164" r="42" fill="white"/>'
            )
        );
    }

    /// @dev Item 1
    function bigRoundEyes() public pure returns (string memory) {
        return group(
            string(
                abi.encodePacked(
                    baseEyes(),
                    '<circle cx="155" cy="164" r="26" fill="#111111"/>',
                    '<circle cx="147" cy="142" r="8" fill="white"/>',
                    '<circle cx="265" cy="164" r="26" fill="#111111"/>',
                    '<circle cx="265" cy="164" r="8" fill="white"/>'
                )
            )
        );
    }
    
    /// @dev Item 2
    function smallPupils() public pure returns (string memory) {
        return group(
            string(
                abi.encodePacked(
                    baseEyes(),
                    '<circle cx="155" cy="164" r="9" fill="#111111"/>',
                    '<circle cx="265" cy="164" r="9" fill="#111111"/>'
                )
            )
        );
    }

    /// @dev Item 3
    function lowHangingGlasses() public pure returns (string memory) {
        return group(
            string(
                abi.encodePacked(
                    '<circle cx="265" cy="158" r="42" fill="white"/>',
                    '<circle cx="155" cy="158" r="42" fill="white"/>',
                    '<path d="M93.5481 129.175C91.523 129.365 90 131.079 90 133.113V141.572C90 142.876 90.6553 144.074 91.6635 144.901C92.9165 145.93 94.2545 147.279 95.5987 149.323C97.6493 152.442 99.6957 157.148 101.528 164.756C103.342 172.287 107.114 183.457 114.031 192.559C120.934 201.644 130.936 208.633 145.262 207.954C159.86 207.263 167.07 206.469 171.538 205.076C175.345 203.89 177.146 202.28 179.939 199.782L179.944 199.778C180.382 199.387 180.844 198.973 181.343 198.536C188.514 192.248 193.933 181.835 196.344 171.34C197.569 166.009 199.27 162.156 201.573 159.63C203.764 157.227 206.465 156.064 209.69 155.935C209.694 155.935 209.696 155.932 209.696 155.929C209.696 155.926 209.699 155.923 209.702 155.923C209.802 155.923 209.901 155.924 210 155.926C210.099 155.924 210.198 155.923 210.298 155.923C210.301 155.923 210.304 155.926 210.304 155.929C210.304 155.932 210.306 155.935 210.31 155.935C213.535 156.064 216.236 157.227 218.427 159.63C220.73 162.156 222.431 166.009 223.656 171.34C226.067 181.835 231.486 192.248 238.657 198.536C239.155 198.973 239.617 199.386 240.054 199.777L240.061 199.783C242.855 202.28 244.655 203.89 248.462 205.076C252.93 206.469 260.14 207.263 274.738 207.954C289.064 208.633 299.066 201.644 305.969 192.559C312.886 183.457 316.658 172.287 318.472 164.756C320.304 157.148 322.351 152.442 324.401 149.323C325.745 147.279 327.083 145.93 328.337 144.901C329.345 144.074 330 142.876 330 141.572V133.113C330 131.079 328.477 129.365 326.452 129.175C315.191 128.116 298.332 127.47 280.017 128.576C259.33 129.824 236.833 133.305 218.456 140.917C217.376 141.443 215.668 141.746 214.047 141.925C212.687 142.074 211.323 142.142 210.307 142.161C210.305 142.161 210.304 142.163 210.304 142.165C210.304 142.166 210.302 142.168 210.301 142.168C210.206 142.168 210.105 142.167 210 142.166C209.895 142.167 209.794 142.168 209.699 142.168C209.698 142.168 209.696 142.166 209.696 142.165C209.696 142.163 209.695 142.161 209.693 142.161C208.677 142.142 207.313 142.074 205.953 141.925C204.332 141.746 202.624 141.443 201.544 140.917C183.167 133.305 160.67 129.824 139.983 128.576C121.668 127.47 104.809 128.116 93.5481 129.175Z" fill="#111111"/>'
                )
            )
        );
    }

    /// @dev Item 4
    function heartEyes() public pure returns (string memory) {
        return group(
            string(
                abi.encodePacked(
                    baseEyes(),
                    '<path d="M174.984 153.787C174.332 152.263 173.393 150.883 172.218 149.722C171.042 148.558 169.655 147.633 168.134 146.997C166.556 146.335 164.864 145.996 163.155 146C160.759 146 158.42 146.663 156.388 147.915C155.902 148.214 155.44 148.543 155.002 148.902C154.565 148.543 154.103 148.214 153.617 147.915C151.585 146.663 149.246 146 146.849 146C145.123 146 143.451 146.334 141.871 146.997C140.344 147.635 138.969 148.553 137.787 149.722C136.611 150.881 135.671 152.262 135.021 153.787C134.345 155.373 134 157.057 134 158.791C134 160.426 134.331 162.129 134.987 163.863C135.536 165.311 136.324 166.814 137.33 168.331C138.925 170.732 141.117 173.236 143.84 175.774C148.352 179.982 152.82 182.889 153.009 183.007L154.161 183.753C154.672 184.082 155.328 184.082 155.839 183.753L156.991 183.007C157.18 182.884 161.643 179.982 166.16 175.774C168.882 173.236 171.075 170.732 172.67 168.331C173.676 166.814 174.469 165.311 175.013 163.863C175.669 162.129 176 160.426 176 158.791C176.005 157.057 175.66 155.373 174.984 153.787Z" fill="#DD6158"/>',
                    '<path d="M284.984 153.787C284.332 152.263 283.393 150.883 282.218 149.722C281.042 148.558 279.655 147.633 278.134 146.997C276.556 146.335 274.864 145.996 273.155 146C270.759 146 268.42 146.663 266.388 147.915C265.902 148.214 265.44 148.543 265.002 148.902C264.565 148.543 264.103 148.214 263.617 147.915C261.585 146.663 259.246 146 256.849 146C255.123 146 253.451 146.334 251.871 146.997C250.344 147.635 248.969 148.553 247.787 149.722C246.611 150.881 245.671 152.262 245.021 153.787C244.345 155.373 244 157.057 244 158.791C244 160.426 244.331 162.129 244.987 163.863C245.536 165.311 246.324 166.814 247.33 168.331C248.925 170.732 251.117 173.236 253.84 175.774C258.352 179.982 262.82 182.889 263.009 183.007L264.161 183.753C264.672 184.082 265.328 184.082 265.839 183.753L266.991 183.007C267.18 182.884 271.643 179.982 276.16 175.774C278.882 173.236 281.075 170.732 282.67 168.331C283.676 166.814 284.469 165.311 285.013 163.863C285.669 162.129 286 160.426 286 158.791C286.005 157.057 285.66 155.373 284.984 153.787Z" fill="#DD6158"/>'
                )
            )
        );
    }

    /// @dev Item 5
    function bitcoinEyes() public pure returns (string memory) {
        return group(
            string(
                abi.encodePacked(
                    baseEyes(),
                    '<path d="M277.901 161.912C280.897 160.384 282.772 157.694 282.334 153.211C281.744 147.085 276.46 145.031 269.789 144.446L269.788 135.949H264.619L264.618 144.222C263.258 144.222 261.872 144.249 260.492 144.277L260.491 135.95L255.327 135.949L255.326 144.444C254.207 144.467 253.108 144.489 252.034 144.489V144.464L244.905 144.461L244.906 149.984C244.906 149.984 248.723 149.912 248.66 149.982C250.753 149.984 251.436 151.2 251.633 152.25L251.634 161.93V175.527C251.542 176.186 251.155 177.239 249.691 177.241C249.758 177.3 245.931 177.24 245.931 177.24L244.906 183.417H251.631C252.884 183.418 254.116 183.438 255.323 183.447L255.328 192.041L260.491 192.042L260.489 183.539C261.909 183.568 263.28 183.58 264.62 183.578L264.618 192.042H269.787L269.789 183.463C278.477 182.964 284.559 180.773 285.315 172.607C285.925 166.032 282.833 163.097 277.901 161.912ZM260.615 150.357C263.53 150.357 272.698 149.428 272.699 155.523C272.698 161.366 263.533 160.684 260.615 160.684V150.357V150.357ZM260.613 177.283L260.615 165.897C264.117 165.896 275.103 164.888 275.104 171.587C275.105 178.012 264.117 177.28 260.613 177.283Z" fill="#111111"/>',
                    '<path d="M167.901 161.912C170.897 160.384 172.772 157.694 172.334 153.211C171.744 147.085 166.46 145.031 159.789 144.446L159.788 135.949H154.619L154.618 144.222C153.258 144.222 151.872 144.249 150.492 144.277L150.491 135.95L145.327 135.949L145.326 144.444C144.207 144.467 143.108 144.489 142.034 144.489V144.464L134.905 144.461L134.906 149.984C134.906 149.984 138.723 149.912 138.66 149.982C140.753 149.984 141.436 151.2 141.633 152.25L141.634 161.93V175.527C141.542 176.186 141.155 177.239 139.691 177.241C139.758 177.3 135.931 177.24 135.931 177.24L134.906 183.417H141.631C142.884 183.418 144.116 183.438 145.323 183.447L145.328 192.041L150.491 192.042L150.489 183.539C151.909 183.568 153.28 183.58 154.62 183.578L154.618 192.042H159.787L159.789 183.463C168.477 182.964 174.559 180.773 175.315 172.607C175.925 166.032 172.833 163.097 167.901 161.912ZM150.615 150.357C153.53 150.357 162.698 149.428 162.699 155.523C162.698 161.366 153.533 160.684 150.615 160.684V150.357V150.357ZM150.613 177.283L150.615 165.897C154.117 165.896 165.103 164.888 165.104 171.587C165.105 178.012 154.117 177.28 150.613 177.283Z" fill="#111111"/>'
                )
            )
        );
    }

    /// @dev Item 6
    function crossEyes() public pure returns (string memory) {
        return group(
            string(
                abi.encodePacked(
                    baseEyes(),
                    '<path d="M147.243 150.586L141.586 156.243L149.364 164.021L141.586 171.799L147.243 177.456L155.021 169.678L162.799 177.456L168.456 171.799L160.678 164.021L168.456 156.243L162.799 150.586L155.021 158.364L147.243 150.586Z" fill="#111111"/>',
                    '<path d="M257.243 150.586L251.586 156.243L259.364 164.021L251.586 171.799L257.243 177.456L265.021 169.678L272.799 177.456L278.456 171.799L270.678 164.021L278.456 156.243L272.799 150.586L265.021 158.364L257.243 150.586Z" fill="#111111"/>'
                )
            )
        );
    }

    /// @dev Item 7
    function twinkleEyes() public pure returns (string memory) {
        return group(
            string(
                abi.encodePacked(
                    baseEyes(),
                    '<circle cx="155" cy="164" r="34" fill="#111111"/>',
                    '<circle cx="141" cy="150" r="21" fill="white"/>',
                    '<circle cx="169" cy="164" r="4" fill="white"/>',
                    '<circle cx="160" cy="176" r="6" fill="white"/>',
                    '<circle cx="265" cy="164" r="34" fill="#111111"/>',
                    '<circle cx="251" cy="150" r="21" fill="white"/>',
                    '<circle cx="279" cy="164" r="4" fill="white"/>',
                    '<circle cx="270" cy="176" r="6" fill="white"/>'
                )
            )
        );
    }

    /// @dev Item 8
    function sleepyEyes() public pure returns (string memory) {
        return group(
            string(
                abi.encodePacked(
                    baseEyes(),
                    '<circle cx="155" cy="172" r="16" fill="#111111"/>',
                    '<circle cx="152" cy="170" r="6" fill="white"/>',
                    '<path d="M155 118C123.448 118 115.166 145.633 113.411 153.771C113.228 154.623 114.171 155.229 114.919 154.781C120.025 151.729 134.936 144 155 144C175.064 144 189.975 151.729 195.081 154.781C195.829 155.229 196.772 154.623 196.589 153.771C194.834 145.633 186.552 118 155 118Z" fill="#DD6158"/>',
                    '<path d="M265 118C233.448 118 225.166 145.633 223.411 153.771C223.228 154.623 224.171 155.229 224.919 154.781C230.025 151.729 244.936 144 265 144C285.064 144 299.975 151.729 305.081 154.781C305.829 155.229 306.772 154.623 306.589 153.771C304.834 145.633 296.552 118 265 118Z" fill="#DD6158"/>',
                    '<circle r="16" transform="matrix(-1 0 0 1 265 172)" fill="#111111"/>',
                    '<circle r="6" transform="matrix(1 0 0 -1 262 170)" fill="white"/>'
                )
            )
        );
    }

    /// @dev Wraps the children into a group
    function group(string memory children) private pure returns (string memory) {
        return string(
            abi.encodePacked('<g class="eyes">', children, '</g>')
        );
    }
}